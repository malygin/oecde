//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.04.02 at 01:06:22 PM MSD 
//


package org.imsglobal.xsd.imsss;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlType;


/**
 * The type associated with a control-mode element (see the element controlMode)
 * <p/>
 * <p>Java class for controlModeType complex type.
 * <p/>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p/>
 * <pre>
 * &lt;complexType name="controlModeType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="choice" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="choiceExit" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="flow" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="forwardOnly" type="{http://www.w3.org/2001/XMLSchema}boolean" default="false" />
 *       &lt;attribute name="useCurrentAttemptObjectiveInfo" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *       &lt;attribute name="useCurrentAttemptProgressInfo" type="{http://www.w3.org/2001/XMLSchema}boolean" default="true" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "controlModeType")
public class ControlModeType {

    @XmlAttribute
    protected Boolean choice;
    @XmlAttribute
    protected Boolean choiceExit;
    @XmlAttribute
    protected Boolean flow;
    @XmlAttribute
    protected Boolean forwardOnly;
    @XmlAttribute
    protected Boolean useCurrentAttemptObjectiveInfo;
    @XmlAttribute
    protected Boolean useCurrentAttemptProgressInfo;

    /**
     * Gets the value of the choice property.
     *
     * @return possible object is
     *         {@link Boolean }
     */
    public boolean isChoice() {
        if (choice == null) {
            return true;
        } else {
            return choice;
        }
    }

    /**
     * Sets the value of the choice property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setChoice(Boolean value) {
        this.choice = value;
    }

    /**
     * Gets the value of the choiceExit property.
     *
     * @return possible object is
     *         {@link Boolean }
     */
    public boolean isChoiceExit() {
        if (choiceExit == null) {
            return true;
        } else {
            return choiceExit;
        }
    }

    /**
     * Sets the value of the choiceExit property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setChoiceExit(Boolean value) {
        this.choiceExit = value;
    }

    /**
     * Gets the value of the flow property.
     *
     * @return possible object is
     *         {@link Boolean }
     */
    public boolean isFlow() {
        if (flow == null) {
            return false;
        } else {
            return flow;
        }
    }

    /**
     * Sets the value of the flow property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setFlow(Boolean value) {
        this.flow = value;
    }

    /**
     * Gets the value of the forwardOnly property.
     *
     * @return possible object is
     *         {@link Boolean }
     */
    public boolean isForwardOnly() {
        if (forwardOnly == null) {
            return false;
        } else {
            return forwardOnly;
        }
    }

    /**
     * Sets the value of the forwardOnly property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setForwardOnly(Boolean value) {
        this.forwardOnly = value;
    }

    /**
     * Gets the value of the useCurrentAttemptObjectiveInfo property.
     *
     * @return possible object is
     *         {@link Boolean }
     */
    public boolean isUseCurrentAttemptObjectiveInfo() {
        if (useCurrentAttemptObjectiveInfo == null) {
            return true;
        } else {
            return useCurrentAttemptObjectiveInfo;
        }
    }

    /**
     * Sets the value of the useCurrentAttemptObjectiveInfo property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setUseCurrentAttemptObjectiveInfo(Boolean value) {
        this.useCurrentAttemptObjectiveInfo = value;
    }

    /**
     * Gets the value of the useCurrentAttemptProgressInfo property.
     *
     * @return possible object is
     *         {@link Boolean }
     */
    public boolean isUseCurrentAttemptProgressInfo() {
        if (useCurrentAttemptProgressInfo == null) {
            return true;
        } else {
            return useCurrentAttemptProgressInfo;
        }
    }

    /**
     * Sets the value of the useCurrentAttemptProgressInfo property.
     *
     * @param value allowed object is
     *              {@link Boolean }
     */
    public void setUseCurrentAttemptProgressInfo(Boolean value) {
        this.useCurrentAttemptProgressInfo = value;
    }

}
