//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.04.02 at 01:06:19 PM MSD 
//


package org.ieee.ltsc.xsd.lom;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for purposeValues.
 * <p/>
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p/>
 * <pre>
 * &lt;simpleType name="purposeValues">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}token">
 *     &lt;enumeration value="discipline"/>
 *     &lt;enumeration value="idea"/>
 *     &lt;enumeration value="prerequisite"/>
 *     &lt;enumeration value="educational objective"/>
 *     &lt;enumeration value="accessibility restrictions"/>
 *     &lt;enumeration value="educational level"/>
 *     &lt;enumeration value="skill level"/>
 *     &lt;enumeration value="security level"/>
 *     &lt;enumeration value="competency"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 */
@XmlType(name = "purposeValues")
@XmlEnum
public enum PurposeValues {

    @XmlEnumValue("discipline")
    DISCIPLINE("discipline"),
    @XmlEnumValue("idea")
    IDEA("idea"),
    @XmlEnumValue("prerequisite")
    PREREQUISITE("prerequisite"),
    @XmlEnumValue("educational objective")
    EDUCATIONAL_OBJECTIVE("educational objective"),
    @XmlEnumValue("accessibility restrictions")
    ACCESSIBILITY_RESTRICTIONS("accessibility restrictions"),
    @XmlEnumValue("educational level")
    EDUCATIONAL_LEVEL("educational level"),
    @XmlEnumValue("skill level")
    SKILL_LEVEL("skill level"),
    @XmlEnumValue("security level")
    SECURITY_LEVEL("security level"),
    @XmlEnumValue("competency")
    COMPETENCY("competency");
    private final String value;

    PurposeValues(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static PurposeValues fromValue(String v) {
        for (PurposeValues c : PurposeValues.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
